<div id="plone-comments-${context/UID}" tal:content="structure view/get_comment_viewlet" ></div>
<script>


    var options = {
    data: $("#plone-comments-${context/UID}").find("form").serialize(),
    success:    function() {
        $("#plone-comments-${context/UID}").parent().load($("#plone-comments-${context/UID}").parent().attr("url"));
        }
    };
    $("#plone-comments-${context/UID}").find("form").ajaxForm(options);

    // var post_comment_div = $("#commenting");
    //     var in_reply_to_field =
    //         post_comment_div.find("input[name='form.widgets.in_reply_to']");
    //     if (in_reply_to_field.val() !== "") {
    //         var current_reply_id = "#" + in_reply_to_field.val();
    //         var current_reply_to_div = $(".discussion").find(current_reply_id);
    //         $.createReplyForm(current_reply_to_div);
    //         $.clearForm(post_comment_div);
    //     }


    //      /**********************************************************************
    //      * If the user hits the "reply" button of an existing comment, create a
    //      * reply form right beneath this comment.
    //      **********************************************************************/
    //     $(".reply-to-comment-button").bind("click", function (e) {
    //         var comment_div = $(this).parents().filter(".comment");
    //         $.createReplyForm(comment_div);
    //         $.clearForm(comment_div);
    //     });


    //     /**********************************************************************
    //      * If the user hits the "clear" button of an open reply-to-comment form,
    //      * remove the form and show the "reply" button again.
    //      **********************************************************************/
    //     $("#commenting #form-buttons-cancel").bind("click", function (e) {
    //         e.preventDefault();
    //         var reply_to_comment_button = $(this).
    //                                           parents().
    //                                           filter(".comment").
    //                                           find(".reply-to-comment-button");

    //         /* Find the reply-to-comment form and hide and remove it again. */
    //         $.reply_to_comment_form = $(this).parents().filter(".reply");
    //         $.reply_to_comment_form.slideUp("slow", function () {
    //             $(this).remove();
    //         });

    //         /* Show the reply-to-comment button again. */
    //         reply_to_comment_button.css("display", "inline");

    //     });


    //     /**********************************************************************
    //      * Publish a single comment.
    //      **********************************************************************/
    //     $("input[name='form.button.PublishComment']").live('click', function () {
    //         var trigger = this;
    //         var form = $(this).parents("form");
    //         var data = $(form).serialize();
    //         var form_url = $(form).attr("action");
    //         $.ajax({
    //             type: "GET",
    //             url: form_url,
    //             data: "workflow_action=publish",
    //             context: trigger,
    //             success: function (msg) {
    //                 // remove button (trigger object can't be directly removed)
    //                 form.find("input[name='form.button.PublishComment']").remove();
    //                 form.parents(".state-pending").toggleClass('state-pending').toggleClass('state-published');
    //                 $("#plone-comments-${context/UID}").parent().load($("#plone-comments-${context/UID}").parent().attr("url"));
    //                 return false;

    //             },
    //             error: function (msg) {
    //                 return true;
    //             }
    //         });
    //         return false;
    //     });


    //     /**********************************************************************
    //      * Delete a comment and its answers.
    //      **********************************************************************/
    //     $("input[name='form.button.DeleteComment']").live('click', function () {
    //         var trigger = this;
    //         var form = $(this).parents("form");
    //         var data = $(form).serialize();
    //         var form_url = $(form).attr("action");
    //         $.ajax({
    //             type: 'POST',
    //             url: form_url,
    //             context: $(trigger).parents(".comment"),
    //             success: function (data) {
    //                 var comment = $(this);
    //                 var clss = comment.attr('class');
    //                 // remove replies
    //                 var treelevel = parseInt(clss[clss.indexOf('replyTreeLevel') + 'replyTreeLevel'.length], 10);
    //                 // selector for all the following elements of lower level
    //                 var selector = ".replyTreeLevel" + treelevel;
    //                 for (var i = 0; i < treelevel; i++) {
    //                     selector += ", .replyTreeLevel" + i;
    //                 }
    //                 comment.nextUntil(selector).each(function () {
    //                     $(this).fadeOut('fast', function () {
    //                         $(this).remove();
    //                     });
    //                 });
    //                 // remove comment
    //                 $(this).fadeOut('fast', function () {
    //                     $(this).remove();
    //                 });
    //             },
    //             error: function (req, error) {
    //                 return true;
    //             }
    //         });
    //         return false;
    //     });





        /**********************************************************************
         * If the user hits the "reply" button of an existing comment, create a
         * reply form right beneath this comment.
         **********************************************************************/
        $(".reply-to-comment-button").bind("click", function (e) {
            var comment_div = $(this).parents().filter(".comment");
            $.createReplyForm(comment_div);
            $.clearForm(comment_div);
        });


        /**********************************************************************
         * If the user hits the "clear" button of an open reply-to-comment form,
         * remove the form and show the "reply" button again.
         **********************************************************************/
        $("#commenting #form-buttons-cancel").bind("click", function (e) {
            e.preventDefault();
            var reply_to_comment_button = $(this).
                                              parents().
                                              filter(".comment").
                                              find(".reply-to-comment-button");

            /* Find the reply-to-comment form and hide and remove it again. */
            $.reply_to_comment_form = $(this).parents().filter(".reply");
            $.reply_to_comment_form.slideUp("slow", function () {
                $(this).remove();
            });

            /* Show the reply-to-comment button again. */
            reply_to_comment_button.css("display", "inline");

        });


        /**********************************************************************
         * Publish a single comment.
         **********************************************************************/



        /**********************************************************************
         * By default, hide the reply and the cancel button for the regular add
         * comment form.
         **********************************************************************/
        $(".reply").find("input[name='form.buttons.reply']")
                    .css("display", "none");
        $(".reply").find("input[name='form.buttons.cancel']")
                    .css("display", "none");


        /**********************************************************************
         * By default, show the reply button only when Javascript is enabled.
         * Otherwise hide it, since the reply functions only work with JS
         * enabled.
         **********************************************************************/
        $(".reply-to-comment-button").css("display" , "inline");

</script>

